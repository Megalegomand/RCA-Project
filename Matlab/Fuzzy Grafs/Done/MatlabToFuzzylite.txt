:::: This file contains information on how to format your fuzzy controller ind Matlab to fuzzylite ::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

the following is sample from fuzzylite:
https://fuzzylite.github.io/fuzzylite/index.html

#File: ObstacleAvoidance.fll
Engine: ObstacleAvoidance
InputVariable: obstacle
  enabled: true
  range: 0.000 1.000
  lock-range: false
  term: left Ramp 1.000 0.000
  term: right Ramp 0.000 1.000
OutputVariable: mSteer
  enabled: true
  range: 0.000 1.000
  lock-range: false
  aggregation: Maximum
  defuzzifier: Centroid 100
  default: nan
  lock-previous: false
  term: left Ramp 1.000 0.000
  term: right Ramp 0.000 1.000
RuleBlock: mamdani
  enabled: true
  conjunction: none
  disjunction: none
  implication: AlgebraicProduct
  activation: General
  rule: if obstacle is left then mSteer is right
  rule: if obstacle is right then mSteer is left

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::Matlab to fuzzy on naming terms::::::::::::::::::::::::::::::::::::

Matlab     ->     Fuzzylite
____________________________

trimf      ->     Triangle
trapmf     ->     Trapezoid 
gbellmf    ->     Bell
gaussmf    ->     Gaussian
gauss2mf   ->     GaussianProduct
sigmf      ->     Sigmoid
dsigmf     ->     SigmoidDifference
psigmf     ->     SigmoidProduct
pimf       ->     PiShape
smf        ->     SShape
zmf        ->     ZShape